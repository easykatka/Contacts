[{"C:\\Users\\kao\\Desktop\\new-project\\src\\index.js":"1","C:\\Users\\kao\\Desktop\\new-project\\src\\App.js":"2","C:\\Users\\kao\\Desktop\\new-project\\src\\reportWebVitals.js":"3","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\index.js":"4","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\ContactsTable\\index.js":"5","C:\\Users\\kao\\Desktop\\new-project\\src\\components\\CopyToClipboardText\\index.js":"6","C:\\Users\\kao\\Desktop\\new-project\\src\\constants\\nationality.js":"7","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\ToggleDataViewMode\\index.js":"8","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\constants.js":"9","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\useDataViewMode.js":"10","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\SearchPanel\\index.js":"11","C:\\Users\\kao\\Desktop\\new-project\\src\\store\\ContactsStore.js":"12","C:\\Users\\kao\\Desktop\\new-project\\src\\store\\searchPanelStore.js":"13","C:\\Users\\kao\\Desktop\\new-project\\src\\store\\contactsStore.js":"14"},{"size":265,"mtime":1608137084592,"results":"15","hashOfConfig":"16"},{"size":134,"mtime":1608137084591,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1608137084592,"results":"18","hashOfConfig":"16"},{"size":3635,"mtime":1608498259718,"results":"19","hashOfConfig":"16"},{"size":2610,"mtime":1608497224226,"results":"20","hashOfConfig":"16"},{"size":1722,"mtime":1608497433677,"results":"21","hashOfConfig":"16"},{"size":839,"mtime":1608135440051,"results":"22","hashOfConfig":"16"},{"size":1313,"mtime":1608153613337,"results":"23","hashOfConfig":"16"},{"size":71,"mtime":1608135440053,"results":"24","hashOfConfig":"16"},{"size":855,"mtime":1608216292630,"results":"25","hashOfConfig":"16"},{"size":3309,"mtime":1608497467400,"results":"26","hashOfConfig":"16"},{"size":677,"mtime":1608495689448,"results":"27","hashOfConfig":"16"},{"size":248,"mtime":1608494721144,"results":"28","hashOfConfig":"16"},{"size":677,"mtime":1608495689448,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"ng2a20",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\kao\\Desktop\\new-project\\src\\index.js",[],["62","63"],"C:\\Users\\kao\\Desktop\\new-project\\src\\App.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\reportWebVitals.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\index.js",["64","65"],"import Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { ContactsTable } from \"./ContactsTable\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { ToggleDataViewMode } from \"./ToggleDataViewMode\";\r\nimport { DATA_VIEW_MODE } from \"./constants\";\r\nimport { useDataViewMode } from \"./useDataViewMode\";\r\nimport { SearchPanel } from \"./SearchPanel\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { useEffect } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { NATIONALITY_HUMAN_NAME } from \"../../constants/nationality\";\r\n\r\nimport ContactsStore from \"../../store/contactsStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport SearchPanelStore from \"../../store/searchPanelStore\";\r\n\r\n// styles\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {},\r\n    headContainer: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    refresh_button: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n//body\r\nexport const Contacts = observer(() => {\r\n  const classes = useStyles();\r\n  const { getContacts, users, isLoading, isError } = ContactsStore;\r\n  const [dataViewMode, setdataViewMode] = useDataViewMode();\r\n  const { filter } = SearchPanelStore;\r\n\r\n  const filteredUsers = users\r\n    .filter((user) => filter.gender === \"all\" || user.gender === filter.gender)\r\n    .filter((user) => {\r\n      if (\r\n        (\r\n          user.name.first.toLowerCase() +\r\n          \" \" +\r\n          user.name.last.toLowerCase()\r\n        ).includes(filter.searchText.toLowerCase())\r\n      )\r\n        return true;\r\n    })\r\n    .filter((user) => {\r\n      if (\r\n        NATIONALITY_HUMAN_NAME[user.nat].toLowerCase().includes(\r\n          filter.nationality.toLowerCase())\r\n      )\r\n        return true;\r\n    });\r\n\r\n  useEffect(() => {\r\n    getContacts();\r\n  }, [getContacts]);\r\n\r\n  //return\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Grid container>\r\n        <Grid item xs={12} className={classes.headContainer}>\r\n          <Box display=\"flex\" justifyContent=\"space-between\">\r\n            <Typography variant=\"h5\" component=\"h1\">\r\n              Contacts\r\n            </Typography>\r\n            <Box display=\"flex\">\r\n              <IconButton\r\n                className={classes.refresh_button}\r\n                aria-label=\"refresh\"\r\n                onClick={() => getContacts()}\r\n              >\r\n                <RefreshIcon />\r\n              </IconButton>\r\n              <ToggleDataViewMode\r\n                dataViewMode={dataViewMode}\r\n                setdataViewMode={setdataViewMode}\r\n                DATA_VIEW_MODE={DATA_VIEW_MODE}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box display=\"flex\" justifyContent=\"space-between\">\r\n            <SearchPanel />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {(() => {\r\n            if (isLoading) {\r\n              return <LinearProgress />;\r\n            }\r\n            if (isError) {\r\n              return <div>Error</div>;\r\n            }\r\n            if (dataViewMode === DATA_VIEW_MODE.TABLE) {\r\n              return <ContactsTable data={filteredUsers} />;\r\n            }\r\n            if (dataViewMode === DATA_VIEW_MODE.GRID) {\r\n              return \"grid\";\r\n            }\r\n            return \"error\";\r\n          })()}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n});\r\n","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\ContactsTable\\index.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\components\\CopyToClipboardText\\index.js",[],["66","67"],"C:\\Users\\kao\\Desktop\\new-project\\src\\constants\\nationality.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\ToggleDataViewMode\\index.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\constants.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\useDataViewMode.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\SearchPanel\\index.js",["68"],"import { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport SearchPanelStore from \"../../../store/searchPanelStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\n// стили\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  input_item: { minWidth: theme.spacing(40) },\r\n  clear_btn: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n//body\r\nexport const SearchPanel = observer(() => {\r\n  const classes = useStyles();\r\n  const { filter } = SearchPanelStore;\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        {/* контейнер для item */}\r\n        <Grid container spacing={3}>\r\n          {/* первый инпут */}\r\n          <Grid item xs>\r\n            <OutlinedInput\r\n              size=\"small\"\r\n              value={filter.searchText}\r\n              onChange={(e) => (filter.searchText = e.target.value)}\r\n              className={classes.input_item}\r\n              placeholder=\"Search by full name\"\r\n              endAdornment={\r\n                <InputAdornment>\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </Grid>\r\n          {/* выбор пола */}\r\n          <Grid item xs>\r\n            <FormControl variant=\"outlined\" className={classes.input_item}>\r\n              <InputLabel>Gender</InputLabel>\r\n              <Select\r\n                label=\"Gender\"\r\n                value={filter.gender}\r\n                onClick={(e) => (filter.gender = e.target.value)}\r\n              >\r\n                <MenuItem value={\"all\"}>All</MenuItem>\r\n                <MenuItem value={\"male\"}>Male</MenuItem>\r\n                <MenuItem value={\"female\"}>Female</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          {/* инпут последний */}\r\n          <Grid item xs>\r\n            <OutlinedInput\r\n              value={filter.nationality}\r\n              onChange={(e) => (filter.nationality = e.target.value)}\r\n              className={classes.input_item}\r\n              placeholder=\"Nationality\"\r\n            />\r\n          </Grid>\r\n          {/* кнопка очистки */}\r\n          <Grid item xs>\r\n            <Button\r\n              size=\"small\"\r\n              className={classes.clear_btn}\r\n              onClick={() => (\r\n                (filter.searchText = \"\"),\r\n                (filter.gender = \"all\"),\r\n                (filter.nationality = \"\")\r\n              )}\r\n            >\r\n              Clear\r\n            </Button>\r\n          </Grid>\r\n          {/* закрывающие теги */}\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n});\r\n","C:\\Users\\kao\\Desktop\\new-project\\src\\store\\ContactsStore.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\store\\searchPanelStore.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\store\\contactsStore.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":42,"column":20,"nodeType":"75","messageId":"76","endLine":42,"endColumn":22},{"ruleId":"73","severity":1,"message":"74","line":52,"column":20,"nodeType":"75","messageId":"76","endLine":52,"endColumn":22},{"ruleId":"69","replacedBy":"77"},{"ruleId":"71","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":83,"column":41,"nodeType":"81","messageId":"82","endLine":83,"endColumn":42},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["83"],["84"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]