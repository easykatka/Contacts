[{"C:\\Users\\kao\\Desktop\\new-project\\src\\index.js":"1","C:\\Users\\kao\\Desktop\\new-project\\src\\App.js":"2","C:\\Users\\kao\\Desktop\\new-project\\src\\reportWebVitals.js":"3","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\index.js":"4","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\ContactsTable\\index.js":"5","C:\\Users\\kao\\Desktop\\new-project\\src\\components\\CopyToClipboardText\\index.js":"6","C:\\Users\\kao\\Desktop\\new-project\\src\\constants\\nationality.js":"7","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\ToggleDataViewMode\\index.js":"8","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\constants.js":"9","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\useDataViewMode.js":"10","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\SearchPanel\\index.js":"11","C:\\Users\\kao\\Desktop\\new-project\\src\\store\\ContactsStore.js":"12","C:\\Users\\kao\\Desktop\\new-project\\src\\store\\searchPanelStore.js":"13","C:\\Users\\kao\\Desktop\\new-project\\src\\store\\contactsStore.js":"14"},{"size":265,"mtime":1608137084592,"results":"15","hashOfConfig":"16"},{"size":134,"mtime":1608137084591,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1608137084592,"results":"18","hashOfConfig":"16"},{"size":3308,"mtime":1608495827929,"results":"19","hashOfConfig":"16"},{"size":2610,"mtime":1608496691815,"results":"20","hashOfConfig":"16"},{"size":1690,"mtime":1608135440050,"results":"21","hashOfConfig":"16"},{"size":839,"mtime":1608135440051,"results":"22","hashOfConfig":"16"},{"size":1313,"mtime":1608153613337,"results":"23","hashOfConfig":"16"},{"size":71,"mtime":1608135440053,"results":"24","hashOfConfig":"16"},{"size":855,"mtime":1608216292630,"results":"25","hashOfConfig":"16"},{"size":3312,"mtime":1608494721142,"results":"26","hashOfConfig":"16"},{"size":677,"mtime":1608495689448,"results":"27","hashOfConfig":"16"},{"size":248,"mtime":1608494721144,"results":"28","hashOfConfig":"16"},{"size":677,"mtime":1608495689448,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"ng2a20",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\kao\\Desktop\\new-project\\src\\index.js",[],["61","62"],"C:\\Users\\kao\\Desktop\\new-project\\src\\App.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\reportWebVitals.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\index.js",["63","64"],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\ContactsTable\\index.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\components\\CopyToClipboardText\\index.js",["65","66"],"import { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport propsTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\r\nimport { useCopyToClipboard } from \"react-use\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport { useCallback, useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      cursor: \"pointer\",\r\n    },\r\n    icon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\nconst STATUS_COPY = {\r\n  COPY: \"copy\",\r\n  COPIED: \"copied\",\r\n};\r\nconst TITLE_BY_STATUS = {\r\n\t[STATUS_COPY.COPY] : 'Copy',\r\n\t[STATUS_COPY.COPIED]: 'Copied'\r\n}\r\n\r\nexport const CopyToClipboardtext = ({ text }) => {\r\n  const [, copyToClipboard] = useCopyToClipboard();\r\n  const classes = useStyles();\r\n  const [statusCopy, setStatusCopy] = useState(STATUS_COPY.COPY);\r\n\r\n  const onClickCopy = useCallback(() => {\r\n    copyToClipboard(text);\r\n    setStatusCopy(STATUS_COPY.COPIED);\r\n  }, [copyToClipboard]);\r\n  \r\n  const onClickAway = useCallback(() => {\r\n    setStatusCopy(STATUS_COPY.COPY);\r\n  }, [copyToClipboard]);\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={onClickAway}>\r\n      <Tooltip title={TITLE_BY_STATUS[statusCopy]} arrow placement=\"top\">\r\n        <Button className={classes.root} onClick={onClickCopy}>\r\n          <FileCopyOutlinedIcon fontSize=\"small\" className={classes.icon} />\r\n          {text}\r\n        </Button>\r\n      </Tooltip>\r\n    </ClickAwayListener>\r\n  );\r\n};\r\nCopyToClipboardtext.propTypes = {\r\n  text: propsTypes.string.isRequired,\r\n};\r\n","C:\\Users\\kao\\Desktop\\new-project\\src\\constants\\nationality.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\ToggleDataViewMode\\index.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\constants.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\useDataViewMode.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\SearchPanel\\index.js",["67","68"],"// TODO searchpanel\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nimport SearchPanelStore from \"../../../store/searchPanelStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport {useEffect} from 'react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  input_item: { minWidth: theme.spacing(40) },\r\n  clear_btn: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport const SearchPanel = observer (() => {\r\n  const classes = useStyles();\r\n  const {filter} = SearchPanelStore\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        {/* контейнер для item */}\r\n        <Grid container spacing={3}>\r\n          {/* первый инпут */}\r\n          <Grid item xs>\r\n            <OutlinedInput\r\n              size=\"small\"\r\n              value={filter.searchText}\r\n              onChange={(e) =>\r\n\t\t\t\t(filter.searchText = e.target.value )}\r\n              className={classes.input_item}\r\n              placeholder=\"Search by full name\"\r\n              endAdornment={\r\n                <InputAdornment>\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </Grid>\r\n          {/* выбор пола */}\r\n          <Grid item xs>\r\n            <FormControl variant=\"outlined\" className={classes.input_item}>\r\n              <InputLabel>Gender</InputLabel>\r\n              <Select\r\n                label=\"Gender\"\r\n                value={filter.gender}\r\n                onClick={(e) =>\r\n\t\t\t\t\tfilter.gender = e.target.value }\r\n              >\r\n                <MenuItem value={\"all\"}>All</MenuItem>\r\n                <MenuItem value={\"male\"}>Male</MenuItem>\r\n                <MenuItem value={\"female\"}>Female</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          {/* инпут последний */}\r\n          <Grid item xs>\r\n            <OutlinedInput\r\n              value={filter.nationality}\r\n              onChange={(e) =>\r\n                filter.nationality = e.target.value}\r\n              className={classes.input_item}\r\n              placeholder=\"Nationality\"\r\n            />\r\n          </Grid>\r\n          {/* кнопка очистки */}\r\n          <Grid item xs>\r\n            <Button\r\n              size=\"small\"\r\n              className={classes.clear_btn}\r\n              onClick={() =>\r\n                (filter.searchText = \"\", filter.gender = \"all\", filter.nationality = \"\" )}\r\n            >\r\n              Clear\r\n            </Button>\r\n          </Grid>\r\n          {/* закрывающие теги */}\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  )\r\n}\r\n)","C:\\Users\\kao\\Desktop\\new-project\\src\\store\\ContactsStore.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\store\\searchPanelStore.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\store\\contactsStore.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":43,"column":21,"nodeType":"75","messageId":"76","endLine":43,"endColumn":23},{"ruleId":"77","severity":1,"message":"78","line":51,"column":6,"nodeType":"79","endLine":51,"endColumn":8,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":37,"column":6,"nodeType":"79","endLine":37,"endColumn":23,"suggestions":"82"},{"ruleId":"77","severity":1,"message":"83","line":41,"column":6,"nodeType":"79","endLine":41,"endColumn":23,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":16,"column":9,"nodeType":"87","messageId":"88","endLine":16,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":89,"column":40,"nodeType":"91","messageId":"92","endLine":89,"endColumn":41},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getContacts'. Either include it or remove the dependency array.","ArrayExpression",["95"],"React Hook useCallback has a missing dependency: 'text'. Either include it or remove the dependency array.",["96"],"React Hook useCallback has an unnecessary dependency: 'copyToClipboard'. Either exclude it or remove the dependency array.",["97"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [getContacts]",{"range":"104","text":"105"},"Update the dependencies array to be: [copyToClipboard, text]",{"range":"106","text":"107"},"Update the dependencies array to be: []",{"range":"108","text":"109"},[1729,1731],"[getContacts]",[1106,1123],"[copyToClipboard, text]",[1217,1234],"[]"]