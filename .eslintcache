[{"C:\\Users\\kao\\Desktop\\new-project\\src\\index.js":"1","C:\\Users\\kao\\Desktop\\new-project\\src\\App.js":"2","C:\\Users\\kao\\Desktop\\new-project\\src\\reportWebVitals.js":"3","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\index.js":"4","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\useContacts.js":"5","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\ContactsTable\\index.js":"6","C:\\Users\\kao\\Desktop\\new-project\\src\\components\\CopyToClipboardText\\index.js":"7","C:\\Users\\kao\\Desktop\\new-project\\src\\constants\\nationality.js":"8","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\ToggleDataViewMode\\index.js":"9","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\constants.js":"10","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\useDataViewMode.js":"11","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\SearchPanel\\index.js":"12"},{"size":265,"mtime":1608137084592,"results":"13","hashOfConfig":"14"},{"size":134,"mtime":1608137084591,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1608137084592,"results":"16","hashOfConfig":"14"},{"size":2898,"mtime":1608161835638,"results":"17","hashOfConfig":"14"},{"size":907,"mtime":1608154491081,"results":"18","hashOfConfig":"14"},{"size":2626,"mtime":1608135440052,"results":"19","hashOfConfig":"14"},{"size":1690,"mtime":1608135440050,"results":"20","hashOfConfig":"14"},{"size":839,"mtime":1608135440051,"results":"21","hashOfConfig":"14"},{"size":1313,"mtime":1608153613337,"results":"22","hashOfConfig":"14"},{"size":71,"mtime":1608135440053,"results":"23","hashOfConfig":"14"},{"size":855,"mtime":1608135440054,"results":"24","hashOfConfig":"14"},{"size":2310,"mtime":1608162603830,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ng2a20",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kao\\Desktop\\new-project\\src\\index.js",[],["54","55"],"C:\\Users\\kao\\Desktop\\new-project\\src\\App.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\reportWebVitals.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\index.js",["56","57"],"import Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport { useContacts } from \"./useContacts\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { ContactsTable } from \"./ContactsTable\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { ToggleDataViewMode } from \"./ToggleDataViewMode\";\r\nimport { DATA_VIEW_MODE } from \"./constants\";\r\nimport { useDataViewMode } from \"./useDataViewMode\";\r\nimport { SearchPanel } from \"./SearchPanel\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { useEffect } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// styles\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {},\r\n    headContainer: {\r\n      marginTop: theme.spacing(3),\r\n\t},\r\n\trefresh_button: {\r\n\t\tmarginRight: theme.spacing(1),\r\n\t},\r\n  })\r\n);\r\n//body\r\nexport const Contacts = () => {\r\n  const classes = useStyles();\r\n  const [getContacts, data, isLoading, isError] = useContacts();\r\n  const [dataViewMode, setdataViewMode] = useDataViewMode();\r\n  useEffect(() => {\r\n    getContacts();\r\n  }, []);\r\n  //return\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Grid container>\r\n        <Grid item xs={12} className={classes.headContainer}>\r\n          <Box display=\"flex\" justifyContent=\"space-between\">\r\n            <Typography variant=\"h5\" component=\"h1\">\r\n              Contacts\r\n            </Typography>\r\n            <Box display=\"flex\">\r\n              <IconButton className={classes.refresh_button}\r\n                aria-label=\"refresh\"\r\n                \r\n                onClick={() => getContacts()}\r\n              >\r\n                <RefreshIcon />\r\n              </IconButton>\r\n              <ToggleDataViewMode\r\n                dataViewMode={dataViewMode}\r\n                setdataViewMode={setdataViewMode}\r\n                DATA_VIEW_MODE={DATA_VIEW_MODE}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} className={classes.headContainer}>\r\n          <Box display=\"flex\" justifyContent=\"space-between\">\r\n            <SearchPanel />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          {(() => {\r\n            if (isLoading) {\r\n              return <LinearProgress />;\r\n            }\r\n            if (isError) {\r\n              return <div>Error</div>;\r\n            }\r\n            if (dataViewMode === DATA_VIEW_MODE.TABLE) {\r\n              return <ContactsTable data={data} />;\r\n            }\r\n            if (dataViewMode === DATA_VIEW_MODE.GRID) {\r\n              return \"grid\";\r\n            }\r\n            return \"error\";\r\n          })()}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\useContacts.js",["58"],"// кастомный хук для фетча данных ,который вернет data , isLoading и isError значения\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const useContacts = () => {\r\n\tconst [data, setData] = useState([]);\r\n\tconst [isLoading, setisLoading] = useState(true);\r\n\tconst [isError, setisError] = useState(false);\r\n  \r\n\tuseEffect(() => {\r\n\t  const getContacts = async () => {\r\n\t\ttry {\r\n\t\t  setisLoading(true);\r\n\t\t  const response = await fetch(\"https://randomuser.me/api/?results=20\");\r\n\t\t  const { results, error } = await response.json();\r\n\t\t  if (error) {\r\n\t\t\tthrow new Error();\r\n\t\t  }\r\n\t\t  setData(results);\r\n\t\t  setisError(false);\r\n\t\t} catch (e) {\r\n\t\t  setisError(true);\r\n\t\t} finally {\r\n\t\t  setisLoading(false);\r\n\t\t}\r\n\t  };\r\n\t  //запуск функции при маунте приложения\r\n\t  getContacts();\r\n\t}, []);\r\n\treturn {\r\n\t  data,\r\n\t  isLoading,\r\n\t  isError,\r\n\t};\r\n  };","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\ContactsTable\\index.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\components\\CopyToClipboardText\\index.js",["59","60"],"import { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport propsTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\r\nimport { useCopyToClipboard } from \"react-use\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport { useCallback, useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      cursor: \"pointer\",\r\n    },\r\n    icon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\nconst STATUS_COPY = {\r\n  COPY: \"copy\",\r\n  COPIED: \"copied\",\r\n};\r\nconst TITLE_BY_STATUS = {\r\n\t[STATUS_COPY.COPY] : 'Copy',\r\n\t[STATUS_COPY.COPIED]: 'Copied'\r\n}\r\n\r\nexport const CopyToClipboardtext = ({ text }) => {\r\n  const [, copyToClipboard] = useCopyToClipboard();\r\n  const classes = useStyles();\r\n  const [statusCopy, setStatusCopy] = useState(STATUS_COPY.COPY);\r\n\r\n  const onClickCopy = useCallback(() => {\r\n    copyToClipboard(text);\r\n    setStatusCopy(STATUS_COPY.COPIED);\r\n  }, [copyToClipboard]);\r\n  \r\n  const onClickAway = useCallback(() => {\r\n    setStatusCopy(STATUS_COPY.COPY);\r\n  }, [copyToClipboard]);\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={onClickAway}>\r\n      <Tooltip title={TITLE_BY_STATUS[statusCopy]} arrow placement=\"top\">\r\n        <Button className={classes.root} onClick={onClickCopy}>\r\n          <FileCopyOutlinedIcon fontSize=\"small\" className={classes.icon} />\r\n          {text}\r\n        </Button>\r\n      </Tooltip>\r\n    </ClickAwayListener>\r\n  );\r\n};\r\nCopyToClipboardtext.propTypes = {\r\n  text: propsTypes.string.isRequired,\r\n};\r\n","C:\\Users\\kao\\Desktop\\new-project\\src\\constants\\nationality.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\ToggleDataViewMode\\index.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\constants.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\useDataViewMode.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\SearchPanel\\index.js",["61","62","63","64","65","66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":14},{"ruleId":"75","severity":1,"message":"76","line":36,"column":6,"nodeType":"77","endLine":36,"endColumn":8,"suggestions":"78"},{"ruleId":"71","severity":1,"message":"79","line":2,"column":20,"nodeType":"73","messageId":"74","endLine":2,"endColumn":29},{"ruleId":"75","severity":1,"message":"80","line":37,"column":6,"nodeType":"77","endLine":37,"endColumn":23,"suggestions":"81"},{"ruleId":"75","severity":1,"message":"82","line":41,"column":6,"nodeType":"77","endLine":41,"endColumn":23,"suggestions":"83"},{"ruleId":"71","severity":1,"message":"84","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":17},{"ruleId":"71","severity":1,"message":"85","line":6,"column":8,"nodeType":"73","messageId":"74","endLine":6,"endColumn":13},{"ruleId":"71","severity":1,"message":"86","line":8,"column":8,"nodeType":"73","messageId":"74","endLine":8,"endColumn":18},{"ruleId":"71","severity":1,"message":"87","line":15,"column":10,"nodeType":"73","messageId":"74","endLine":15,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":44,"column":13,"nodeType":"90","endLine":44,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":62,"column":13,"nodeType":"90","endLine":62,"endColumn":25},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getContacts'. Either include it or remove the dependency array.","ArrayExpression",["93"],"'useEffect' is defined but never used.","React Hook useCallback has a missing dependency: 'text'. Either include it or remove the dependency array.",["94"],"React Hook useCallback has an unnecessary dependency: 'copyToClipboard'. Either exclude it or remove the dependency array.",["95"],"'TextField' is defined but never used.","'Paper' is defined but never used.","'IconButton' is defined but never used.","'Height' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [getContacts]",{"range":"102","text":"103"},"Update the dependencies array to be: [copyToClipboard, text]",{"range":"104","text":"105"},"Update the dependencies array to be: []",{"range":"106","text":"107"},[1292,1294],"[getContacts]",[1106,1123],"[copyToClipboard, text]",[1217,1234],"[]"]