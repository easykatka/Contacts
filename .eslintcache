[{"C:\\Users\\kao\\Desktop\\new-project\\src\\index.js":"1","C:\\Users\\kao\\Desktop\\new-project\\src\\App.js":"2","C:\\Users\\kao\\Desktop\\new-project\\src\\reportWebVitals.js":"3","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\index.js":"4","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\useContacts.js":"5","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\ContactsTable\\index.js":"6","C:\\Users\\kao\\Desktop\\new-project\\src\\components\\CopyToClipboardText\\index.js":"7","C:\\Users\\kao\\Desktop\\new-project\\src\\constants\\nationality.js":"8","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\ToggleDataViewMode\\index.js":"9","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\constants.js":"10","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\useDataViewMode.js":"11","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\SearchPanel\\index.js":"12"},{"size":265,"mtime":1608137084592,"results":"13","hashOfConfig":"14"},{"size":134,"mtime":1608137084591,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1608137084592,"results":"16","hashOfConfig":"14"},{"size":2864,"mtime":1608163419494,"results":"17","hashOfConfig":"14"},{"size":907,"mtime":1608154491081,"results":"18","hashOfConfig":"14"},{"size":2626,"mtime":1608135440052,"results":"19","hashOfConfig":"14"},{"size":1690,"mtime":1608135440050,"results":"20","hashOfConfig":"14"},{"size":839,"mtime":1608135440051,"results":"21","hashOfConfig":"14"},{"size":1313,"mtime":1608153613337,"results":"22","hashOfConfig":"14"},{"size":71,"mtime":1608135440053,"results":"23","hashOfConfig":"14"},{"size":855,"mtime":1608135440054,"results":"24","hashOfConfig":"14"},{"size":2392,"mtime":1608164240913,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ng2a20",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kao\\Desktop\\new-project\\src\\index.js",[],["53","54"],"C:\\Users\\kao\\Desktop\\new-project\\src\\App.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\reportWebVitals.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\index.js",["55","56"],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\useContacts.js",["57"],"// кастомный хук для фетча данных ,который вернет data , isLoading и isError значения\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const useContacts = () => {\r\n\tconst [data, setData] = useState([]);\r\n\tconst [isLoading, setisLoading] = useState(true);\r\n\tconst [isError, setisError] = useState(false);\r\n  \r\n\tuseEffect(() => {\r\n\t  const getContacts = async () => {\r\n\t\ttry {\r\n\t\t  setisLoading(true);\r\n\t\t  const response = await fetch(\"https://randomuser.me/api/?results=20\");\r\n\t\t  const { results, error } = await response.json();\r\n\t\t  if (error) {\r\n\t\t\tthrow new Error();\r\n\t\t  }\r\n\t\t  setData(results);\r\n\t\t  setisError(false);\r\n\t\t} catch (e) {\r\n\t\t  setisError(true);\r\n\t\t} finally {\r\n\t\t  setisLoading(false);\r\n\t\t}\r\n\t  };\r\n\t  //запуск функции при маунте приложения\r\n\t  getContacts();\r\n\t}, []);\r\n\treturn {\r\n\t  data,\r\n\t  isLoading,\r\n\t  isError,\r\n\t};\r\n  };","C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\ContactsTable\\index.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\components\\CopyToClipboardText\\index.js",["58","59"],"import { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport propsTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\r\nimport { useCopyToClipboard } from \"react-use\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport { useCallback, useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      cursor: \"pointer\",\r\n    },\r\n    icon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\nconst STATUS_COPY = {\r\n  COPY: \"copy\",\r\n  COPIED: \"copied\",\r\n};\r\nconst TITLE_BY_STATUS = {\r\n\t[STATUS_COPY.COPY] : 'Copy',\r\n\t[STATUS_COPY.COPIED]: 'Copied'\r\n}\r\n\r\nexport const CopyToClipboardtext = ({ text }) => {\r\n  const [, copyToClipboard] = useCopyToClipboard();\r\n  const classes = useStyles();\r\n  const [statusCopy, setStatusCopy] = useState(STATUS_COPY.COPY);\r\n\r\n  const onClickCopy = useCallback(() => {\r\n    copyToClipboard(text);\r\n    setStatusCopy(STATUS_COPY.COPIED);\r\n  }, [copyToClipboard]);\r\n  \r\n  const onClickAway = useCallback(() => {\r\n    setStatusCopy(STATUS_COPY.COPY);\r\n  }, [copyToClipboard]);\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={onClickAway}>\r\n      <Tooltip title={TITLE_BY_STATUS[statusCopy]} arrow placement=\"top\">\r\n        <Button className={classes.root} onClick={onClickCopy}>\r\n          <FileCopyOutlinedIcon fontSize=\"small\" className={classes.icon} />\r\n          {text}\r\n        </Button>\r\n      </Tooltip>\r\n    </ClickAwayListener>\r\n  );\r\n};\r\nCopyToClipboardtext.propTypes = {\r\n  text: propsTypes.string.isRequired,\r\n};\r\n","C:\\Users\\kao\\Desktop\\new-project\\src\\constants\\nationality.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\ToggleDataViewMode\\index.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\constants.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\useDataViewMode.js",[],"C:\\Users\\kao\\Desktop\\new-project\\src\\pages\\Contacts\\SearchPanel\\index.js",["60","61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":37,"column":6,"nodeType":"73","endLine":37,"endColumn":8,"suggestions":"74"},{"ruleId":"67","severity":1,"message":"75","line":2,"column":20,"nodeType":"69","messageId":"70","endLine":2,"endColumn":29},{"ruleId":"71","severity":1,"message":"76","line":37,"column":6,"nodeType":"73","endLine":37,"endColumn":23,"suggestions":"77"},{"ruleId":"71","severity":1,"message":"78","line":41,"column":6,"nodeType":"73","endLine":41,"endColumn":23,"suggestions":"79"},{"ruleId":"67","severity":1,"message":"80","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":17},{"ruleId":"67","severity":1,"message":"81","line":8,"column":8,"nodeType":"69","messageId":"70","endLine":8,"endColumn":18},{"ruleId":"67","severity":1,"message":"82","line":15,"column":10,"nodeType":"69","messageId":"70","endLine":15,"endColumn":16},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getContacts'. Either include it or remove the dependency array.","ArrayExpression",["85"],"'useEffect' is defined but never used.","React Hook useCallback has a missing dependency: 'text'. Either include it or remove the dependency array.",["86"],"React Hook useCallback has an unnecessary dependency: 'copyToClipboard'. Either exclude it or remove the dependency array.",["87"],"'TextField' is defined but never used.","'IconButton' is defined but never used.","'Height' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [getContacts]",{"range":"94","text":"95"},"Update the dependencies array to be: [copyToClipboard, text]",{"range":"96","text":"97"},"Update the dependencies array to be: []",{"range":"98","text":"99"},[1291,1293],"[getContacts]",[1106,1123],"[copyToClipboard, text]",[1217,1234],"[]"]